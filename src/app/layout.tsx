import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import dynamic from 'next/dynamic';
import { generateTitle } from '../utils';
import { Header } from '../components';
import '../styles/globals.scss';

const inter = Inter({ weight: ['400', '700'], subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Cuidado Con El Perro',
  description: 'Generated by create next app',
};

const ClientTitleUpdater = dynamic(
  () => import('../components/ClientTitleUpdater'),
  { ssr: false }
);

const ApolloProviderWrapper = dynamic(
  () => import('../providers/ApolloProviderWrapper'),
  { ssr: false }
);

const AuthProviderWrapper = dynamic(
  () => import('../providers/AuthProviderWrapper'),
  { ssr: false }
);

const generateBaseTitle = (pathname: string): string => {
  return generateTitle(pathname);
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname =
    typeof window !== 'undefined' ? window.location.pathname : '/';
  const baseTitle = generateBaseTitle(pathname);
  return (
    <html lang="es">
      <head>
        <link
          href="/favicon-dark.ico"
          rel="icon"
          media="(prefers-color-scheme: light)"
        />
        <link
          href="/favicon-light.ico"
          rel="icon"
          media="(prefers-color-scheme: dark)"
        />
        <title>{baseTitle as string}</title>
      </head>
      <body>
        <AuthProviderWrapper>
          <ApolloProviderWrapper>
            <Header />
            {children}
            <ClientTitleUpdater />
          </ApolloProviderWrapper>
        </AuthProviderWrapper>
      </body>
    </html>
  );
}
